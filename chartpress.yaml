# This is the configuration for chartpress, a CLI for Helm chart management.
#
# chartpress is used to:
# - Build images
# - Update Chart.yaml (version) and values.yaml (image tags)
# - Package and publish Helm charts to a GitHub based Helm chart repository
#
# For more information, see the projects README.md file:
# https://github.com/jupyterhub/chartpress
#
charts:
  - name: jupyterhub
    # Dev: imagePrefix can be useful to override if you want to trial something
    #      locally developed in a remote k8s cluster.
    imagePrefix: quay.io/jupyterhub/k8s-
    # baseVersion should be a -0.dev suffixed version, where the version should
    # be the next major, minor, or patch version depending on what we have
    # merged so far into the main branch. If for example we have merged a
    # breaking change it should be the next major version, like 3.0.0-0.dev.
    #
    # baseVersion should be managed via tbump, see RELEASE.md for details
    #
    baseVersion: "4.0.0-0.dev"
    repo:
      git: jupyterhub/helm-chart
      published: https://jupyterhub.github.io/helm-chart

    images:
      # hub, the container where JupyterHub, KubeSpawner, and the configured
      # Authenticator are running.
      hub:
        valuesPath: hub.image
      # hub-slim, an alternative hub image that doesn't include some
      # basic utilities for k8s admins
      hub-slim:
        contextPath: images/hub
        extraBuildCommandOptions:
          - --target=slim-stage

      # secret-sync, a sidecar container running in the autohttps pod to next to
      # Traefik meant to sync a TLS certificate with a k8s Secret.
      secret-sync:
        valuesPath: proxy.secretSync.image

      # network-tools, an initContainer with iptables installed starting on user
      # pods to block access to the so called "cloud metadata server" for
      # security reasons.
      network-tools:
        valuesPath: singleuser.networkTools.image

      # image-awaiter, the only container inside the image-awaiter-job Pod
      # starting as part of `helm upgrade` in order to check that images have
      # been pulled by the hook-image-puller before helm starts doing additional
      # changes as part of the upgrade.
      image-awaiter:
        valuesPath: prePuller.hook.image

      # singleuser-sample, a primitive user container to start with.
      singleuser-sample:
        valuesPath: singleuser.image

      # taint-manager, an initContainer to add/remove taint for a node
      taint-manager:
        valuesPath: prePuller.taintmanager.image
